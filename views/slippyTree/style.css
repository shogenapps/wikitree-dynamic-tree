/**
 * First three rules force some changes to the tree nodes
 * outside the view-container - required because the
 * slippy-tree-container must fill the rest of the screen.
 */
:root:has(.slippy-tree-container) {
    height: 100%;
     --content-padding: 0;
}
body:has(.slippy-tree-container) {
    display: flex;
    flex-direction: column;
    height: 100%;
}
#view-container:has(.slippy-tree-container) {
    flex: 1;
    min-height: auto;
}

/**
 * Below here everything is prefixed with .slippy-tree-container
 */
.slippy-tree-container {
    position: relative;
    font: 14px sans-serif;
    overflow: hidden;
    height: 100%;
    --button-color: #639;
}
.slippy-tree-container * {
    touch-action: none !important;
}
.slippy-tree-container h1 {
    font-size: 16px;
    margin-top: 0;
}

@media (min-width: 800px) {
    .slippy-tree-container .relationshipName {
        position: fixed;
        left: 16px;
        bottom: 28px;
        color: black;
        -webkit-text-stroke: 6px #f0f0ef;
        -webkit-text-fill: black;
        paint-order: stroke fill;
    }
    .slippy-tree-container .relationshipName .name {
        font-weight: bold;
    }
}

.slippy-tree-container .slippy-help-button {
    position: absolute;
    font-size: 30px;
    line-height: 1;
    font-weight: bold;
    width: 1em;
    height: 1em;
    top: 20px;
    cursor: pointer;
    border-radius: 50%;
    border: 4px solid var(--button-color);
    color: white;
    background: var(--button-color);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    left: 20px;
}
.slippy-tree-container .slippy-help-button::before {
    content: "?";
}

.slippy-tree-container .helpContainer {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: #0008;
}

.slippy-tree-container .helpContainer h1 {
    margin-bottom: 0;
}

.slippy-tree-container .helpContainer > div .helpCloseButton {
    /* relatively positioning the div triggered a bug in webkit layout, so do this the hard way */
    float: right;
    position: relative;
    font-size: 16px;
    line-height: 0;
    user-select: none;
    -webkit-user-select: none;
}

.slippy-tree-container .helpContainer .slippy-settings-wheel {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
}
.slippy-tree-container .helpContainer .icon-attribution {
    position: relative;
    top: 12px;
    font-size: 8px;
    color: #aaa;
}
.slippy-tree-container .helpContainer .icon-attribution a {
    color: inherit;
}
.slippy-tree-container .helpContainer .slippy-settings-wheel img {
    height: 2.9em;
    margin-bottom: -1em;
    float: left;
}
.slippy-tree-container .helpContainer .slippy-settings-wheel > div {
    width: 12em;
    padding: 4px;
    border: 4px solid #888;
    border-radius: 8px;
    background: #eee;
    color: black;
}
.slippy-tree-container .helpContainer .slippy-settings-wheel > div.selected {
    border-color: red;
}
.slippy-tree-container .helpContainer .slippy-categories {
    display: block;
    width: 100%;
}
@media (not (hover:hover)) {
    /* this block applies only if there is no mouse present */
    .slippy-tree-container .helpContainer .slippy-settings-wheel {
        display: none;
    }
    .slippy-tree-container .helpContainer .slippy-about {
        margin: 0.5em;
    }
    .slippy-tree-container .helpContainer .icon-attribution {
        display: none;
    }
}

.slippy-tree-container .helpContainer > div {
    --width: 500px;
    text-align: center;
    left: calc(50% - var(--width));
    margin: 0 10px;
    max-width: var(--width);
    background: white;
    border: 2px solid black;
    padding: 15px;
    transform-origin: 50% 50%;
}
/* A bodge to scaling down the help text to roughly fit on an iPhone screen */
@media ((max-width: 480px) or (max-height: 295px)) { .slippy-tree-container .helpContainer > div { transform: scale(0.89); } }
@media ((max-width: 450px) or (max-height: 270px)) { .slippy-tree-container .helpContainer > div { transform: scale(0.84); } }
@media ((max-width: 420px) or (max-height: 255px)) { .slippy-tree-container .helpContainer > div { transform: scale(0.79); } }
@media ((max-width: 390px) or (max-height: 230px)) { .slippy-tree-container .helpContainer > div { transform: scale(0.72); } }

.slippy-tree-container .hidden {
    display: none !important;
}

/* Mouse selection is a massive pain for drag-scrolling, disable unless we explicitly want it */
.slippy-tree-container .slippy-tree-scrollpane, .slippy-tree-container .slippy-tree-scrollpane > *  {
    user-select: none;
    -webkit-user-select: none;
}
.slippy-tree-container .text-selectable {
    user-select: text !important;
    -webkit-user-select: text !important;
}
.slippy-tree-container .slippy-tree-scrollpane {
    width: 100%;
    height: 100%;
    position: relative;
    overflow: scroll;
}

/** the menu */
.slippy-tree-container .personMenu {
    position: absolute;
    width: max-content;
    border: 1px solid black;
    background: white;
    padding: 20px;
    font-size: 16px;
    z-index:999;
    padding: 0;
}

.slippy-tree-container .personMenu > * {
    padding: 8px;
    display: block;
    color: initial;
    text-decoration: none;
}

.slippy-tree-container .personMenu > *:first-child {
    background: #888;
    font-weight: bold;
    color: white;
    user-select: text !important;
}

.slippy-tree-container .personMenu > :is(*[data-action]:hover, *[data-action].focus) {
    background-color: #DED;
}

/** the tree itself */
.slippy-tree {
    --male:    #CCF;                    /* color of male person */
    --female:  #FCC;                    /* color of female person */
    --mother:  #F00;                    /* color of link to mother */
    --father:  #00F;                    /* color of link to father */
    --neutral: #8C8;                    /* color of link to ungendered parent or a non-biological link */
    --spouse: #181;                     /* color of spouse link */
    --coparent: none;                   /* color of coparent link (not drawn by default) */
    --mother-transparent:  #F000;       /* transparent version of mother */
    --father-transparent:  #00F0;       /* transparent version of father */
    --parent-transparent:  #0A00;       /* transparent version of parent */
    --spouse-transparent:  #1810;       /* transparent version of spouse */
    --unloaded-parent-length: 40px;     /* The length of a fading line indicating an unloaded parent */
    --unloaded-child-length: 30px;      /* The length of a fading line indicating an unloaded child */
    --unloaded-spouse-length: 20px;     /* The length of a fading line indicating an unloaded spouse */
    --same-generation-bend: 20px;       /* The length of the extra curve to add for same-generation relations */
    --member: #ebba34;                  /* color of "member" tag on person */
    --highlight: #6c6;                  /* color of "highlight" tag on person */
    /* These next properties are accessed in JS. Values must be pixels, not other lengths */
    --spouse-margin: 10px;              /* vertical distance between two adjacent spouses */
    --spouse-indent: 10px;              /* horizontal indent for a visually dependent spouse */
    --sibling-margin: 20px;             /* min vertical distance between two adjacent siblings */
    --other-margin: 40px;               /* min vertical distance between two unrelated nodes */
    --generation-margin: 100px;         /* horizontal distance between two generations */
    --min-person-width: 50px;           /* minimum width of a person rectangle */

    display: block;
    position: relative;
    contain: style size layout paint;
    overflow: hidden;

}

.slippy-tree:root {
    font-family: sans-serif;
}

.slippy-tree a[href] {
    fill: black;
}

.slippy-tree text {
    font-size: 10px;
    text-anchor: middle;
    margin: 4px;    /* Hack! Margin doesnt apply in SVG, but we read this value in the JS to compute position */
}
.slippy-tree text.left {
    text-anchor: start;
}

.slippy-tree .people rect {
    fill: white;
    stroke: #aaa;
    stroke-width: 1px;
}

.slippy-tree .people > * {
    cursor: pointer;
}

.slippy-tree .people .pending {
    opacity: 0.3;
}

.slippy-tree .people .male rect {
    fill: var(--male);
}

.slippy-tree .people .female rect {
    fill: var(--female);
}

.slippy-tree .people path {
    display: none;
}

.slippy-tree .people .highlight path {
    display: initial;
    fill: var(--highlight);
}
.slippy-tree .people .member path {
    display: initial;
    fill: var(--member);
}

.slippy-tree .people .activeuser path {
    fill: var(--activeuser);
}

.slippy-tree .people .focus rect {
    stroke: red;
    stroke-width: 2px; 
}
.slippy-tree .people .secondaryfocus:not(.focus) rect {
    stroke: black;
    stroke-width: 2px; 
}

/* relations */
.slippy-tree .relations :is(path, line) {
    opacity: 0.1;
    fill: none;
    stroke-width: 4px;
    stroke: #888;       /* default color, always overridden */
}
.slippy-tree .relations .mother {
    stroke: var(--mother);
}
.slippy-tree .relations .father {
    stroke: var(--father);
}
.slippy-tree .relations .spouse {
    stroke: var(--spouse);
    stroke-width: 2px;
    opacity: 0.3;
}
.slippy-tree .relations .spouse.focus {
    opacity: 0.6;
}
.slippy-tree .relations .coparent {
    stroke: var(--coparent);
    stroke-width: 2px;
    opacity: 0.3;
    stroke-dasharray: 2px;
}
.slippy-tree .relations .coparent.focus {
    opacity: 0.6;
}
.slippy-tree .relations .dna {
    stroke-width: 16px;
}
.slippy-tree .relations .confident {
    stroke-width: 9px;
}
.slippy-tree .relations .nonbiological {
    stroke: var(--neutral);
}
.slippy-tree .relations .parent {
    stroke: var(--neutral);
}
.slippy-tree .relations .uncertain {
    stroke-dasharray: 8px;
}
.slippy-tree .relations .unloaded-mother {
    stroke: url("#unloaded-mother");
}
.slippy-tree .relations .unloaded-father {
    stroke: url("#unloaded-father");
}
.slippy-tree .relations .father-unloaded {
    stroke: url("#father-unloaded");
}
.slippy-tree .relations .mother-unloaded {
    stroke: url("#mother-unloaded");
}
.slippy-tree .relations .spouse-unloaded {
    stroke: url("#spouse-unloaded");
    stroke-width: 2px;
    opacity: 0.5
}
.slippy-tree .relations .noissue {
    stroke: black;
    stroke-width: 1;
    opacity: 0.5;
}

/* labels */
.slippy-tree .labels .marriage {
    font-size: 8px;
    fill: black;
    transform: translate(8px, 0.4em);
}

/* general */
.slippy-tree :is(.relations, .people. .labels) .focus {
    opacity: 0.8;
}

.slippy-tree-container:not(.loading) .loader {
    display: none;
}
.slippy-tree-container .loader {
    position: absolute;
    top: 20px;
    left: 20px;
    box-sizing: border-box;
    width: 38px;
    padding: 8px;
    z-index: 9999;
    aspect-ratio: 1;
    border-radius: 50%;
    background: white;
    --_m: conic-gradient(#0000 10%,#000), linear-gradient(#000 0 0) content-box;
    mask: var(--_m);
    -webkit-mask: var(--_m);
    -webkit-mask-composite: source-out;
    mask-composite: subtract;
    animation: slippy-tree-loader 1s infinite linear;
}
@keyframes slippy-tree-loader {
    to {
        transform: rotate(1turn)
    }
}
